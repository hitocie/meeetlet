
[ Top page ]
  [Development] http://localhost:3000/auths
  
[ DTO / Database entities]
 User
  x -key :Key
   *id :int
  x -id :String(userid)
   -uid :String(userid)
   -name :String(username)
   -token :String (if logged in.)
  x -timestamp :Date
   
 Event
  x -key :Key
  x -id :String(eventid)
   *id :int
   -title :String
   -date :Date
   -place :String
   -budget :String
   -genre :String(?)
   -shop :String
   -[owner :User(ownerRef)]
  x -[participants :(participantsRef --> Array<Participant>)]
   -comment :String
   -[preEvent :PreEvent(preEventRef)]
   -canceled :bool
  x -timestamp :Date

 PreEvent
  x -key :Key
   *id :int
   -dates :Array<Date> (e.g. 11/23, 11/24, 11/25)
   -places :Array<String> (e.g. Boston, NY, LA)
   -budgets :Array<String> (e.g. 1000-2000, 2000-3000, 3000-4000)
   -genres :Array<String> (e.g. Japanese, Chinese, Western)
   -shops :Array<String> (e.g. A, B, C)
 
 Response(enum)
   - OK(0), NG(1), Pending(2)

 Participant
  x -key :Key
   *id :int
   -event :(eventRef --> Event)
   -user :(userRef --> User)
   -attend :Response
   -comment :String
   -preParticipant :(preParticipantRef --> PreParticipant)

 PreParticipant
  x -key
   *id :int
   -dates :Array<Response>
   -places :Array<Response>
   -budgets :Array<Response>
   -genres :Array<Response>
   -shops :Array<Response>
   -comment :String
   
 Prefecture
  x -key :Key
   *id :int
   -code :String
   -name :String
  x -timestamp :Date
   
 City
  x -key :Key
   *id :int
   -name :String
   -yomi :String
   -[prefecture --> Prefecture]
  x -timestamp :Date
   
 Station
  x -key :Key
   -id :int
   -name :String
   -yomi :String
   -line :String
   -[prefecture --> Prefecture]
   -lat :String
   -lng :String
  x -timestamp :Date

   
[ Web services ] *root: http://localhost:8888/api/v1/

 auth/facebook/
 auth/facebook/token
 
 auth/facebook/check
   service=login
 
 
 me/get
   service=get_me
   service=get_my_friends
 
 me/update
   nothing   

 event/get
   service=get_my_events
   service=find_my_events(keyword) // search
   // service=get_all_events
   
     offset=int(first position)
     limit=int(last position)

 event/update
   service=create_pre_event(title, dates, places, budgets, genres, participants, comment)
   service=create_event(title, date, place, budget, genre, participants, comment)
   // TODO: update event.
   //service=update_pre_event(eventid, <same as above>)
   //service=update_event(eventid, <same as above>)
   
   service=reply_pre_event(eventid, dates, places, budgets, genres, comment)
   service=reply_event(eventid, attend, comment)
   service=cancel_event(eventid)
   service=invite_friends(eventid, [userid, userid, ....])

 common/area
   service=get_all_prefectures()
     http://localhost:3000/prefectures.json
   service=get_cities(prefecture)
     http://localhost:3000/cities.json?prefecture_id=1
   service=find_cities(name)
     http://localhost:3000/cities.json?name=AB
     
   service=get_stations(prefecture)
     http://localhost:3000/stations.json?prefecture_id=1
   service=find_stations(name)
     http://localhost:3000/cities.json?name=AB

// TODO list
- Send private message to friends
- Solve CSRF token authenticity issue
- Create initial data

   